name: Revisión de dependencias y vulnerabilidades

on:
  workflow_dispatch:
  push:
    branches: 
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  revisar_dependencias:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Listar todas las dependencias instaladas
        run: npm list --all

      - name: Correr npm audit y crear reporte por nivel de vulnerabilidad
        run: |
          npm audit --json > audit.json
          node <<'EOF'
          const fs = require('fs');
          const audit = JSON.parse(fs.readFileSync('audit.json', 'utf8'));
          const levels = { critical: [], high: [], moderate: [], low: [], none: [] };
          const dependencies = [];
          // Listar TODAS las dependencias
          try {
            const list = JSON.parse(require('child_process').execSync('npm ls --json').toString());
            function collectDeps(obj) {
              if (obj.dependencies) {
                Object.entries(obj.dependencies).forEach(([name, dep]) => {
                  dependencies.push(name);
                  collectDeps(dep);
                });
              }
            }
            collectDeps(list);
          } catch (e) {}
          // Procesar vulnerabilidades
          if (audit.vulnerabilities) {
            Object.values(audit.vulnerabilities).forEach(vuln => {
              const level = vuln.severity || 'none';
              if (levels[level]) levels[level].push(vuln.name);
            });
          }
          // Escribir reporte a archivo
          let output = '';
          output += 'Dependencias con Vulnerabilidad Crítica/Alta\n';
          const high = Array.from(new Set([...levels.critical, ...levels.high]));
          if (high.length) high.forEach(dep => output += dep + '\n');
          else output += 'Sin resultados.\n';
          output += '\nDependencias con Vulnerabilidad Media\n';
          if (levels.moderate.length) levels.moderate.forEach(dep => output += dep + '\n');
          else output += 'Sin resultados.\n';
          output += '\nDependencias con Vulnerabilidad Baja o Sin Vulnerabilidad\n';
          const lowOrNone = dependencies.filter(dep =>
            !high.includes(dep) && !levels.moderate.includes(dep)
          );
          if (lowOrNone.length) lowOrNone.forEach(dep => output += dep + '\n');
          else output += 'Sin resultados.\n';
          fs.writeFileSync('reporte.txt', output);
          EOF

      - name: Subir reporte de dependencias
        uses: actions/upload-artifact@v3
        with:
          name: reporte-dependencias
          path: reporte.txt
name: Revisión de dependencias y vulnerabilidades

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  revisar_dependencias:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Generar reporte de vulnerabilidades en PDF
        run: |
          npm audit --json > audit.json
          node <<'EOF'
          const fs = require('fs');
          const { execSync } = require('child_process');
          const PDFDocument = require('pdfkit');

          // Obtener lista de dependencias
          const depsTree = JSON.parse(execSync('npm ls --all --json').toString());
          const allDeps = {};

          function collectDeps(obj) {
            if (obj.dependencies) {
              for (const [name, info] of Object.entries(obj.dependencies)) {
                allDeps[name] = info.version || 'desconocida';
                collectDeps(info);
              }
            }
          }

          collectDeps(depsTree);

          // Leer reporte de audit
          const audit = JSON.parse(fs.readFileSync('audit.json', 'utf8'));
          const levels = { critical: [], high: [], moderate: [], low: [], none: [] };

          for (const [name, version] of Object.entries(allDeps)) {
            const vuln = audit.vulnerabilities?.[name];
            if (vuln) {
              levels[vuln.severity || 'none'].push({ name, version, via: vuln.via });
            } else {
              levels.none.push({ name, version });
            }
          }

          // Crear PDF
          const doc = new PDFDocument({ margin: 30 });
          doc.pipe(fs.createWriteStream('reporte_dependencias.pdf'));

          doc.fontSize(18).text('Reporte de Dependencias y Vulnerabilidades', { align: 'center' });
          doc.moveDown();

          const severityColors = {
            critical: '#FF0000',
            high: '#FF4500',
            moderate: '#FFA500',
            low: '#FFFF00',
            none: '#00BFFF'
          };

          for (const level of ['critical', 'high', 'moderate', 'low', 'none']) {
            const entries = levels[level];
            doc.moveDown().fontSize(14).fillColor(severityColors[level]).text(`Vulnerabilidades ${level.toUpperCase()}`);
            doc.fillColor('black').fontSize(12);

            if (entries.length === 0) {
              doc.text('No se encontraron dependencias en esta categoría.');
            } else {
              // Encabezado de tabla
              doc.text('Nombre de la dependencia | Versión | Detalles');
              doc.text('-------------------------|---------|---------');
              for (const dep of entries) {
                const details = dep.via ? dep.via.map(v => typeof v === 'string' ? v : v.title).join('; ') : 'Sin vulnerabilidades';
                doc.text(`${dep.name} | ${dep.version} | ${details}`);
              }
            }
          }

          doc.end();
          EOF

      - name: Subir reporte de dependencias (PDF)
        uses: actions/upload-artifact@v4
        with:
          name: reporte-dependencias-pdf
          path: reporte_dependencias.pdf
